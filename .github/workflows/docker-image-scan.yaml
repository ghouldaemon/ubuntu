name: Prisma Cloud Docker Image Scan
on:
  workflow_dispatch:

jobs:
  Docker-Image-Scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Login to Docker Registry
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: conukwuru
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image
      - name: Docker Build
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: ghouldaemon/ubuntu:${{ github.run_number }}

      # Runs Docker image scan
      - name: Docker Image Scan
        id: scan
        uses: PaloAltoNetworks/prisma-cloud-scan@v1.5
        with:
          pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
          pcc_user: ${{ secrets.PCC_ACCESS_KEY_ID }}
          pcc_pass: ${{ secrets.PCC_SECRET_ACCESS_KEY }}
          image_name: ghouldaemon/ubuntu:${{ github.run_number }}

      # Runs twistcli sandbox
      - name: Docker Image Sandbox Scan
        run: |
          curl -s https://utd-packages.s3.amazonaws.com/twistcli --output twistcli
          chmod +x twistcli
          sudo ./twistcli sandbox --address ${{ secrets.PCC_CONSOLE_URL }} --user ${{ secrets.PCC_ACCESS_KEY_ID }} --password ${{ secrets.PCC_SECRET_ACCESS_KEY }} --analysis-duration 2m ghouldaemon/ubuntu:${{ github.run_number }}

      # Runs checkov scan
      - name: Run Prisma Cloud 
        id: prisma-cloud
        uses: bridgecrewio/checkov-action@master
        env:
          PRISMA_API_URL: https://api.prismacloud.io
        with:
          api-key: ${{ secrets.BC_API_KEY }}
          output_format: cli,sarif
          output_file_path: console,results.sarif
          use_enforcement_rules: true
     
      
      # Push Image to registry if all the steps pass
      - name: Docker Push
        run: |
          docker push ghouldaemon/ubuntu:${{ github.run_number }}
